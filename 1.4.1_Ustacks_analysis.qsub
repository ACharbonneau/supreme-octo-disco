#!/bin/sh -login
#PBS -j oe
#PBS -l nodes=1:ppn=20,walltime=4:00:00,mem=64gb
#PBS -m a
#PBS -l feature='intel16'

# -o : tells it where to put output from your job
# -j oe : specifies that output and error messages from your job can be placed in the same location
# -l : resource requests (maximum amounts needed for each)
# -M : email address to send status updates to
# -m abe : what to send email updates about (abort, begin, end)
# -N : names your job
# -r n : tells it not to re-run the script in the case of an error (so it doesn't overwrite any results generated$
# -t 0-? : job numbers for array submission


#Starting in ProcessRadtags/

cd ${PBS_O_WORKDIR} || exit

source ~/.bash_profile



dt=`date '+%Y%m%d'`

batch=${dt}_U_Pop${popmin}_Ind${indivmin}_m${m}_M${M}_n${n}

mkdir ${dataAbv}_${batch}

# Run Ustacks
ID=1
for file in `cat ../Metadata/${Ustackslist}`
	do ustacks -p 20 -t fastq -m ${m} -M ${M} -i ${ID} -f ${file} \
	-o ${dataAbv}_${batch}
	ID=`expr ${ID} + 1`
done

cd ${dataAbv}_${batch}

cstacks -p 20 -b ${dt} -n ${n} -o . `cat ../../Metadata/${cslist}  | sed s/.fq_q20//g` &>> ${cslist}.log

sstacks -p 20 -b ${dt} -c batch_${dt} -o . `cat ../../Metadata/${cslist}  | sed s/.fq_q20//g` &>> ${cslist}.log

cat ../../Metadata/${popfile}  | sed s/.fq_q20//g > temppopfile

populations -b ${dt} -P . -t 20 --fasta --treemix --fstats --structure --vcf --renz 'pstI' --write_random_snp --verbose -p ${popmin} -r ${indivmin} --ordered_export -M temppopfile

mkdir STRUCTURE

cd STRUCTURE || exit

#bash ../../../supreme-octo-disco/1.5_STRUCTURE_submit.sh "batch_${dt}.structure.tsv"
