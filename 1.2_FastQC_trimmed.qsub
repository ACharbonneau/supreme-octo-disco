#!/bin/sh -login
#PBS -j oe
#PBS -l nodes=1:ppn=1,walltime=04:00:00,mem=10gb
#PBS -m a
#PBS -t 0-20

# -o : tells it where to put output from your job
# -j oe : specifies that output and error messages from your job can be placed in the same location
# -l : resource requests (maximum amounts needed for each)
# -M : email address to send status updates to
# -m abe : what to send email updates about (abort, begin, end)
# -N : names your job
# -r n : tells it not to re-run the script in the case of an error (so it doesn't overwrite any results generated$
# -t 0-? : job numbers for array submission


#Starting in GBS/ProcessRadtags/
cd ${PBS_O_WORKDIR}

source ~/.bash_profile
module load FastQC/0.11.3
module load R/3.2.0
module load pandoc/1.17.3

#Run FastQC again

filelist=(*trimmed.fq) #get list of sequencing lanes

fastqfile=${filelist[${PBS_ARRAYID}]} #assign indiv to be current sequence file

fastqc -o ../fastQC/TrimmedFQC/ ${fastqfile}

# Calculate next job to run
NEXT=$(( ${PBS_ARRAYID} + 20 ))
JOBSCRIPT=../supreme-octo-disco/1.2_FastQC_trimmed.qsub

#Check to see if next job is past the maximum job id
if [ ${NEXT} -le ${MAXJOBID} ]
then
    cd ${PBS_O_WORKDIR}
    qsub -t ${NEXT} ${JOBSCRIPT} -v MAXJOBID=${MAXJOBID}
fi

cd ../fastQC/TrimmedFastQC/

qcs=$(cat *.zip | wc -l)

if [ ${qcs} = 1440 ]
  then Rscript ../../supreme-octo-disco/1.2.1_FastQC_aggregate.R
fi
