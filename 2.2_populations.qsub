#!/bin/sh -login
#PBS -j oe
#PBS -l nodes=1:ppn=20,walltime=8:00:00,mem=64gb
#PBS -m a

# -o : tells it where to put output from your job
# -j oe : specifies that output and error messages from your job can be placed in the same location
# -l : resource requests (maximum amounts needed for each)
# -M : email address to send status updates to
# -m abe : what to send email updates about (abort, begin, end)
# -N : names your job
# -r n : tells it not to re-run the script in the case of an error (so it doesn't overwrite any results generated$
# -t 0-? : job numbers for array submission

#Starting in SigSelection

cd ${PBS_O_WORKDIR} || exit

module load stacks/1.35

rc=`pwd`
rc=`basename $rc | cut -f 1 -d "_"`

dt=`date '+%Y%m%d'`


populations -b ${batchID} -P . -t 20 --treemix --fstats --structure --vcf --renz 'pstI' --write_random_snp --verbose -p 21 -r 0.75 --ordered_export -M ../../../../Metadata/${rc}*.pop


# -P,--in_path — path to the directory containing the Stacks files.
# -b,--batch_id — Batch ID to examine when exporting from the catalog (required by -P).
# -V,--in_vcf — path to an input VCF file.
# -O,--out_path — path to a directory where to white the output files. (Required by -V; otherwise defaults to value of -P.)
# -M,--popmap — path to a population map. (Format is 'SAMPLE1POP1\n...'.)
# -t,--threads — number of threads to run in parallel sections of code.
# -s,--sql_out — output a file to import results into an SQL database.
# -p [int] — minimum number of populations a locus must be present in to process a locus.
# -r [float] — minimum percentage of individuals in a population required to process a locus for that population.
# --min_maf [float] — specify a minimum minor allele frequency required to process a nucleotide site at a locus (0 < min_maf < 0.5).
# --max_obs_het [float] — specify a maximum observed heterozygosity required to process a nucleotide site at a locus.
# -m [int] — specify a minimum stack depth required for individuals at a locus.
# --lnl_lim [float] — filter loci with log likelihood values below this threshold.
# --write_single_snp — restrict data analysis to only the first SNP per locus.
# --write_random_snp — restrict data analysis to one random SNP per locus.
# -B — path to a file containing Blacklisted markers to be excluded from the export.
# -W — path to a file containing Whitelisted markers to include in the export.
# -e,--renz — restriction enzyme name.
# --merge_sites — merge loci that were produced from the same restriction enzyme cutsite (requires reference-aligned data).
# --merge_prune_lim — when merging adjacent loci, if at least X% samples posses both loci prune the remaining samples out of the analysis.
# --fstats — enable SNP and haplotype-based F statistics.
# --fst_correction — specify a correction to be applied to Fst values: 'p_value', 'bonferroni_win', or 'bonferroni_gen'. Default: off.
# --p_value_cutoff [float] — maximum p-value to keep an Fst measurement. Default: 0.05. (Also used as base for Bonferroni correction.)
# -k,--kernel_smoothed — enable kernel-smoothed π, FIS, FST, FST', and ΦST calculations.
# --sigma [int] — standard deviation of the kernel smoothing weight distribution. Default 150kb.
# --bootstrap — turn on boostrap resampling for all smoothed statistics.
# -N,--bootstrap_reps [int] — number of bootstrap resamplings to calculate (default 100).
# --bootstrap_pifis — turn on boostrap resampling for smoothed SNP-based Pi and Fis calculations.
# --bootstrap_fst — turn on boostrap resampling for smoothed Fst calculations based on pairwise population comparison of SNPs.
# --bootstrap_div — turn on boostrap resampling for smoothed haplotype diveristy and gene diversity calculations based on haplotypes.
# --bootstrap_phist — turn on boostrap resampling for smoothed Phi_st calculations based on haplotypes.
# --bootstrap_wl [path] — only bootstrap loci contained in this whitelist.
# --ordered_export — if data is reference aligned, exports will be ordered; only a single representative of each overlapping site.
# --genomic — output each nucleotide position (fixed or polymorphic) in all population members to a file (requires --renz).
# --fasta — output full sequence for each unique haplotype, from each sample locus in FASTA format, regardless of plausibility.
# --fasta_strict — output full sequence for each haplotype, from each sample locus in FASTA format, only for biologically plausible loci.
# --vcf — output SNPs in Variant Call Format (VCF).
# --vcf_haplotypes — output haplotypes in Variant Call Format (VCF).
# --genepop — output results in GenePop format.
# --structure — output results in Structure format.
# --phase — output genotypes in PHASE format.
# --fastphase — output genotypes in fastPHASE format.
# --beagle — output genotypes in Beagle format.
# --beagle_phased — output haplotypes in Beagle format.
# --plink — output genotypes in PLINK format.
# --hzar — output genotypes in Hybrid Zone Analysis using R (HZAR) format.
# --phylip — output nucleotides that are fixed-within, and variant among populations in Phylip format for phylogenetic tree construction.
# --phylip_var — include variable sites in the phylip output encoded using IUPAC notation.
# --phylip_var_all — include all sequence as well as variable sites in the phylip output encoded using IUPAC notation.
# --treemix — output SNPs in a format useable for the TreeMix program (Pickrell and Pritchard).
# -h,--help— display this help messsage.
# -v,--version— print program version.
# --verbose— turn on additional logging.
# --log_fst_comp— log components of FST/ΦST calculations to a file.